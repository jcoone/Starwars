// <auto-generated />
using System;
using API.Entitys;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Data.InitialCreate
{
    [DbContext(typeof(StarwarsContext))]
    partial class StarwarsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("API.Entitys.Crafts", b =>
                {
                    b.Property<string>("Url")
                        .HasColumnName("url")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("CargoCapacity")
                        .HasColumnName("cargo_capacity")
                        .HasColumnType("int");

                    b.Property<string>("Consumables")
                        .IsRequired()
                        .HasColumnName("consumables")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("CostInCredits")
                        .HasColumnName("cost_in_credits")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnName("created")
                        .HasColumnType("datetime");

                    b.Property<string>("Crew")
                        .IsRequired()
                        .HasColumnName("crew")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Edited")
                        .HasColumnName("edited")
                        .HasColumnType("datetime");

                    b.Property<short>("HyperdriveRating")
                        .HasColumnName("hyperdrive_rating")
                        .HasColumnType("smallint");

                    b.Property<short>("Length")
                        .HasColumnName("length")
                        .HasColumnType("smallint");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnName("manufacturer")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<short>("MaxAtmospheringSpeed")
                        .HasColumnName("max_atmosphering_speed")
                        .HasColumnType("smallint");

                    b.Property<short>("Mglt")
                        .HasColumnName("MGLT")
                        .HasColumnType("smallint");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnName("model")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Passengers")
                        .IsRequired()
                        .HasColumnName("passengers")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("StarshipClass")
                        .IsRequired()
                        .HasColumnName("starship_class")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VehicleType")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Url")
                        .HasName("PK_Spaceships");

                    b.ToTable("Crafts");
                });

            modelBuilder.Entity("API.Entitys.FilmToCraft", b =>
                {
                    b.Property<string>("CraftUrl")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FilmUrl")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("CraftUrl", "FilmUrl");

                    b.ToTable("FilmToCraft");
                });

            modelBuilder.Entity("API.Entitys.FilmToPeople", b =>
                {
                    b.Property<string>("FilmUrl")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PeopleUrl")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("FilmUrl", "PeopleUrl");

                    b.HasIndex("PeopleUrl");

                    b.ToTable("FilmToPeople");
                });

            modelBuilder.Entity("API.Entitys.Films", b =>
                {
                    b.Property<string>("Url")
                        .HasColumnName("url")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Created")
                        .HasColumnName("created")
                        .HasColumnType("datetime");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnName("director")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("Edited")
                        .HasColumnName("edited")
                        .HasColumnType("datetime");

                    b.Property<short>("EpisodeId")
                        .HasColumnName("episode_id")
                        .HasColumnType("smallint");

                    b.Property<string>("OpeningCrawl")
                        .IsRequired()
                        .HasColumnName("opening_crawl")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Producer")
                        .IsRequired()
                        .HasColumnName("producer")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnName("release_date")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Url");

                    b.ToTable("Films");
                });

            modelBuilder.Entity("API.Entitys.FilmsToSpecies", b =>
                {
                    b.Property<string>("FilmUrl")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("SpeciesUrl")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("FilmUrl", "SpeciesUrl");

                    b.ToTable("FilmsToSpecies");
                });

            modelBuilder.Entity("API.Entitys.Peoples", b =>
                {
                    b.Property<string>("Url")
                        .HasColumnName("url")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("BirthYear")
                        .HasColumnName("birth_year")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Created")
                        .HasColumnName("created")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Edited")
                        .HasColumnName("edited")
                        .HasColumnType("datetime");

                    b.Property<string>("EyeColor")
                        .HasColumnName("eye_color")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Gender")
                        .HasColumnName("gender")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("HairColor")
                        .HasColumnName("hair_color")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<short?>("Height")
                        .HasColumnName("height")
                        .HasColumnType("smallint");

                    b.Property<string>("Homeworld")
                        .HasColumnName("homeworld")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<short?>("Mass")
                        .HasColumnName("mass")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SkinColor")
                        .HasColumnName("skin_color")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Url");

                    b.ToTable("Peoples");
                });

            modelBuilder.Entity("API.Entitys.PersonToCraft", b =>
                {
                    b.Property<string>("PersonUrl")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CraftUrl")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("PersonUrl", "CraftUrl");

                    b.ToTable("PersonToCraft");
                });

            modelBuilder.Entity("API.Entitys.Planets", b =>
                {
                    b.Property<string>("Url")
                        .HasColumnName("url")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Created")
                        .HasColumnName("created")
                        .HasColumnType("datetime");

                    b.Property<int>("Diameter")
                        .HasColumnName("diameter")
                        .HasColumnType("int");

                    b.Property<DateTime>("Edited")
                        .HasColumnName("edited")
                        .HasColumnType("datetime");

                    b.Property<string>("Gravity")
                        .IsRequired()
                        .HasColumnName("gravity")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<short>("OrbitalPeriod")
                        .HasColumnName("orbital_period")
                        .HasColumnType("smallint");

                    b.Property<string>("Population")
                        .HasColumnName("population")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<short>("RotationPeriod")
                        .HasColumnName("rotation_period")
                        .HasColumnType("smallint");

                    b.Property<short>("SurfaceWater")
                        .HasColumnName("surface_water")
                        .HasColumnType("smallint");

                    b.Property<string>("Terrain")
                        .IsRequired()
                        .HasColumnName("terrain")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Url");

                    b.ToTable("Planets");
                });

            modelBuilder.Entity("API.Entitys.PlanetsToFilms", b =>
                {
                    b.Property<string>("PlanetUrl")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FilmsUrl")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("PlanetUrl", "FilmsUrl");

                    b.HasIndex("FilmsUrl");

                    b.ToTable("PlanetsToFilms");
                });

            modelBuilder.Entity("API.Entitys.Species", b =>
                {
                    b.Property<string>("Url")
                        .HasColumnName("url")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<short>("AverageHeight")
                        .HasColumnName("average_height")
                        .HasColumnType("smallint");

                    b.Property<short?>("AverageLifespan")
                        .HasColumnName("average_lifespan")
                        .HasColumnType("smallint");

                    b.Property<string>("Classification")
                        .IsRequired()
                        .HasColumnName("classification")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Created")
                        .HasColumnName("created")
                        .HasColumnType("datetime");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnName("designation")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Edited")
                        .HasColumnName("edited")
                        .HasColumnType("datetime");

                    b.Property<string>("EyeColors")
                        .HasColumnName("eye_colors")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("HairColors")
                        .HasColumnName("hair_colors")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Homeworld")
                        .HasColumnName("homeworld")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Language")
                        .HasColumnName("language")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("SkinColors")
                        .HasColumnName("skin_colors")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Url");

                    b.ToTable("Species");
                });

            modelBuilder.Entity("API.Entitys.SpeciesToPeople", b =>
                {
                    b.Property<string>("SpeciesUrl")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PeopleUrl")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("SpeciesUrl", "PeopleUrl");

                    b.ToTable("SpeciesToPeople");
                });

            modelBuilder.Entity("API.Entitys.FilmToPeople", b =>
                {
                    b.HasOne("API.Entitys.Films", "FilmUrlNavigation")
                        .WithMany("FilmToPeople")
                        .HasForeignKey("FilmUrl")
                        .HasConstraintName("FK_FilmToPeople_Films")
                        .IsRequired();

                    b.HasOne("API.Entitys.Peoples", "PeopleUrlNavigation")
                        .WithMany("FilmToPeople")
                        .HasForeignKey("PeopleUrl")
                        .HasConstraintName("FK_FilmToPeople_Peoples")
                        .IsRequired();
                });

            modelBuilder.Entity("API.Entitys.PlanetsToFilms", b =>
                {
                    b.HasOne("API.Entitys.Films", "FilmsUrlNavigation")
                        .WithMany("PlanetsToFilms")
                        .HasForeignKey("FilmsUrl")
                        .HasConstraintName("FK_PlanetsToFilms_Films")
                        .IsRequired();

                    b.HasOne("API.Entitys.Planets", "PlanetUrlNavigation")
                        .WithMany("PlanetsToFilms")
                        .HasForeignKey("PlanetUrl")
                        .HasConstraintName("FK_PlanetsToFilms_Planets")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
